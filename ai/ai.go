package ai

import (
	"context"
	"log"
	"os"

	"github.com/sashabaranov/go-openai"
)

// Initialize OpenAI client
var client *openai.Client

func init() {
	// Initialize OpenAI client with your API key (replace with actual environment variable or .env setup)
	client = openai.NewClient(os.Getenv("OPENAI_API_KEY"))

}

// GetTaskBreakdown generates a breakdown of the task using OpenAI's GPT-3
func GetTaskBreakdown(taskTitle string) (string, error) {
	// Define the prompt to send to the OpenAI model
	prompt := "Given the following task, suggest a detailed breakdown of smaller subtasks:\n" + taskTitle

	// Prepare the completion request
	req := openai.CompletionRequest{
		Model:       openai.GPT3TextDavinci003, // Using GPT-3's Davinci model
		Prompt:      prompt,
		MaxTokens:   150, // Limit the length of the response
		Temperature: 0.7, // Control the randomness of the model
	}

	// Use the CreateCompletion method to get the AI response
	resp, err := client.CreateCompletion(context.Background(), req)
	if err != nil {
		log.Println("Error in AI request:", err)
		return "", err
	}

	// Return the text generated by OpenAI as the breakdown of the task
	return resp.Choices[0].Text, nil
}
